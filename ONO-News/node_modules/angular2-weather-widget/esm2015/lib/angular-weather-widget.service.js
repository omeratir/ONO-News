/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { API } from './config';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
export class AngularWeatherWidgetService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
    }
    /**
     * @param {?} location
     * @param {?} APIKEY
     * @return {?}
     */
    getWeatherDetails(location, APIKEY) {
        return this.http.get(API + APIKEY + '&q=' + location);
    }
}
AngularWeatherWidgetService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
AngularWeatherWidgetService.ctorParameters = () => [
    { type: HttpClient }
];
/** @nocollapse */ AngularWeatherWidgetService.ngInjectableDef = i0.defineInjectable({ factory: function AngularWeatherWidgetService_Factory() { return new AngularWeatherWidgetService(i0.inject(i1.HttpClient)); }, token: AngularWeatherWidgetService, providedIn: "root" });
if (false) {
    /** @type {?} */
    AngularWeatherWidgetService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci13ZWF0aGVyLXdpZGdldC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhcjItd2VhdGhlci13aWRnZXQvIiwic291cmNlcyI6WyJsaWIvYW5ndWxhci13ZWF0aGVyLXdpZGdldC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sVUFBVSxDQUFDOzs7QUFLL0IsTUFBTSxPQUFPLDJCQUEyQjs7OztJQUV0QyxZQUFtQixJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO0lBQUksQ0FBQzs7Ozs7O0lBRXhDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxNQUFNO1FBQ2pDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLE1BQU0sR0FBRyxLQUFLLEdBQUcsUUFBUSxDQUFDLENBQUM7SUFDdkQsQ0FBQzs7O1lBVEYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7O1lBTFEsVUFBVTs7Ozs7SUFRTCwyQ0FBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgQVBJIH0gZnJvbSAnLi9jb25maWcnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBBbmd1bGFyV2VhdGhlcldpZGdldFNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBodHRwOiBIdHRwQ2xpZW50KSB7IH1cblxuICBnZXRXZWF0aGVyRGV0YWlscyhsb2NhdGlvbiwgQVBJS0VZKSA6IE9ic2VydmFibGUgPGFueT4ge1xuICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoQVBJICsgQVBJS0VZICsgJyZxPScgKyBsb2NhdGlvbik7XG4gIH1cbn1cbiJdfQ==